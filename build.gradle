

void testOnGraph(String graphPath, String expected) {
	String command = "./src/program ${graphPath}"
	def process = command.execute()
	process.waitFor()
	
	def output = process.text
	def exitValue = process.exitValue()
	
	if( exitValue == 0 && output == expected ) {
		println "Test for graph ${graphPath} PASSED"
	} else {
		println "Test for graph ${graphPath} FAILED"
		if( exitValue ) {
			println "    Exitvalue is not 0 but ${exitValue}" 
		}
		if( output != expected ) {
			println "    Output not as expected!" 
			println "    Expected: ${expected}" 
			println "    Received: ${output}" 
		}
	}
}


task checkProgram {
	description = "Run all checks of the cycle detection program"
	outputs.upToDateWhen { false }
	
	doLast {
		[
			'./graphs/graphmatrix-1.txt': '4, 0, 1, 3, 2\n',
			'./graphs/graphmatrix-2.txt': 'CYCLE DETECTED!\n',
			'./graphs/graphmatrix-3.txt': '0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n',
			'./graphs/graphmatrix-4.txt': '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24\n',
			'./graphs/graphmatrix-5.txt': '0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99\n',
			'./graphs/graphmatrix-6.txt': 'CYCLE DETECTED!\n',
			'./graphs/graphmatrix-7.txt': 'CYCLE DETECTED!\n',
			'./graphs/graphmatrix-8.txt': 'CYCLE DETECTED!\n',
			'./graphs/graphmatrix-9.txt': 'CYCLE DETECTED!\n',
		].each { k,v ->
			testOnGraph(k,v)
		}		
	}
}

defaultTasks 'checkProgram'

